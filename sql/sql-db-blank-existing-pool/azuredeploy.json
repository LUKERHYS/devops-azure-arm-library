{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.1.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "sqlServerName": {
            "minLength": 1,
            "maxLength": 25,
            "type": "string",
            "metadata": {
                "description": "The name of the sql server resource, excluding .database.windows.net"
            }
        },
        "sqlPoolName": {
            "minLength": 1,
            "maxLength": 25,
            "type": "string",
            "metadata": {
                "description": "The name of the sql elastic pool"
            }
        },
        "sqlDbName": {
            "minLength": 1,
            "maxLength": 50,
            "type": "string",
            "metadata": {
                "description": "The name of the database to create"
            }
        },
        "sqlDbEnableTDE": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Whether to enable TDE (transparent database encryption), defaults to true"
            }
        },
        "sqlDbCollation": {
            "type": "string",
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
            "metadata": {
                "description": "What collation to use for the newly created database, defaults to SQL_Latin1_General_CP1_CI_AS"
            }
        },
        "deployEnvironment" : {
            "type" : "string",
            "defaultValue" : "Unknown",
            "metadata" : {
                "description" : "Supply the deployment environment to use when applying 'env' tag to database resource"
            }
        },
        "clientPrefix" : {
            "type" : "string",
            "defaultValue" : "Unknown",
            "metadata" : {
                "description" : "Supply the client prefix value to use when applying 'clientPrefix' tag to database resource"
            }
        },
        "appName" : {
            "type" : "string",
            "defaultValue" : "Unknown",
            "metadata" : {
                "description" : "Supply the name of the application this database is associated with, this will be applied as a resource tag"
            }
        }        
    },
    "variables": {
        "transparentDataEncryption": "[if(parameters('sqlDbEnableTDE'), 'Enabled', 'Disabled')]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers/databases",
            "tags" : {
                "env" : "[parameters('deployEnvironment')]",
                "clientPrefix" : "[parameters('clientPrefix')]",
                "appName" : "[parameters('appName')]"
            },
            "name": "[concat(parameters('sqlServerName'), '/', parameters('sqlDbName'))]",
            "apiVersion": "2017-10-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "collation": "[parameters('sqlDbCollation')]",
                "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticpools', parameters('sqlServerName'), parameters('sqlPoolName'))]"
            },
            "resources": [
                {
                    "comments": "Transparent Data Encryption",
                    "name": "current",
                    "type": "transparentDataEncryption",
                    "apiVersion": "2015-05-01-preview",
                    "properties": {
                        "status": "[variables('transparentDataEncryption')]"
                    },
                    "dependsOn": [
                        "[parameters('sqlDbName')]"
                    ]
                }
            ]
        }
    ],
    "outputs": {
        "sqlServerFqdn": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Sql/servers/', parameters('sqlServerName')), '2015-05-01-preview').fullyQualifiedDomainName]"
        },
        "sqlDbName": {
            "type": "string",
            "value": "[parameters('sqlDbName')]"
        }
    }
}
